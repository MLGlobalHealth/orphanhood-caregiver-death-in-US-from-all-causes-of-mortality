unique(nat.data.simp$age)
tmp <- nat.data.simp[year %in% 2021 & age != '0-14' & age != '50+',
list(births.ttl = sum(births, na.rm = T)), by = c('year', 'state')]
mean(tmp$births.ttl)
tmp
# national level (Figrue 1) ----
# mortality
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
unique(mort.data.simp$cause.name)
unique(mort.data.simp$age)
tmp <- mort.data.simp[year %in% 2000:2021, list(deaths.ttl = sum(deaths, na.rm = T)), by = 'year']
min(tmp$deaths.ttl)
pry.cause <- get_leading_cause_national()
tmp <- mort.data.simp[cause.name %in% c(pry.cause$raw,
'Chronic lower respiratory diseases',
'Cerebrovascular diseases')]
tmp <- tmp[year %in% 2000:2021 & cause.name != 'Others']
unique(tmp$cause.name)
tmp <- tmp[year %in% 2000:2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('year', 'cause.name')]
min(tmp$deaths.ttl)
# natality
nat.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'NCHS', 'births',
'national_nchs_births.csv')))
tmp <- nat.data.simp[year %in% 2000:2021 & sex == 'Female',
list(births.ttl = sum(births, na.rm = T)), by = 'year']
min(tmp$births.ttl)
# then for loop from 2000 to 2021, which means the mortality data will be reviewed from 1983 to 2021.
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
# then for loop from 2000 to 2021, which means the mortality data will be reviewed from 1983 to 2021.
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
tmp.mor <- mort.data.simp[, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('year')]
res <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_national_race_fert_stable_poisson_aggre_M_summary_cg_loss_age.csv')))
res.national <- res[, list(orphans = sum(orphans, na.rm = T)),
by = c('year', 'child.age')]
min.mort <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.mor[year %in% (yr - 17):yr]
tmp.res <- res.national[year %in% (yr - 17):yr]
tmp.res[, yr.diff := yr - year]
tmp.res[, child.age.new := yr.diff + child.age]
tmp.res <- tmp.res[child.age.new <= 17]
tmp.res[, child.age.group := ifelse(child.age.new %in% 0:4, '0-4',
ifelse(child.age.new %in% 5:9, '5-9', '10-17'))]
tmp.res <- tmp.res[, list(orphans.ttl = sum(orphans, na.rm = T)),
by = c('child.age.group')]
cat(yr)
cat('\n')
cat(min.mort)
cat('\n')
min.mort <- c(min.mort, min(tmp.res$orphans.ttl)/sum(tmp.res$orphans.ttl) * sum(tmp.yr$deaths.ttl))
}
length(min.mort)
min(min.mort)
#
#
nat.data.simp
#
#
nat.data.simp <- nat.data.simp[sex == 'Female']
tmp.nat <- nat.data.simp[sex == 'Female', list( births.ttl = sum( births, na.rm = T)),
by = c('year')]
min.nat <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.nat[year %in% (yr - 17):yr]
min.nat <- c(min.nat, sum(tmp.yr$births.ttl))
}
min(min.nat)
# then for loop from 2000 to 2021, which means the mortality data will be reviewed from 1983 to 2021.
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
tmp.mor <- mort.data.simp[, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('year')]
res <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_national_race_fert_stable_poisson_aggre_M_summary_cg_loss_age.csv')))
res.national <- res[, list(orphans = sum(orphans, na.rm = T)),
by = c('year', 'child.age')]
min.mort <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.mor[year %in% (yr - 17):yr]
tmp.res <- res.national[year %in% (yr - 17):yr]
tmp.res[, yr.diff := yr - year]
tmp.res[, child.age.new := yr.diff + child.age]
tmp.res <- tmp.res[child.age.new <= 17]
tmp.res[, child.age.group := ifelse(child.age.new %in% 0:4, '0-4',
ifelse(child.age.new %in% 5:9, '5-9', '10-17'))]
tmp.res <- tmp.res[, list(orphans.ttl = sum(orphans, na.rm = T)),
by = c('child.age.group')]
cat(yr)
cat('\n')
cat(min.mort)
cat('\n')
min.mort <- c(min.mort, min(tmp.res$orphans.ttl)/sum(tmp.res$orphans.ttl) * sum(tmp.yr$deaths.ttl))
}
length(min.mort)
min(min.mort)
#
#
nat.data.simp <- nat.data.simp[sex == 'Female']
tmp.nat <- nat.data.simp[sex == 'Female', list( births.ttl = sum( births, na.rm = T)),
by = c('year')]
min.nat <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.nat[year %in% (yr - 17):yr]
min.nat <- c(min.nat, sum(tmp.yr$births.ttl))
}
min(min.nat)
# by race & eth
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
tmp.mart <- mort.data.simp[, list( deaths.ttl = sum( deaths, na.rm = T)),
by = c('year', 'race.eth')]
mort.data.simp
tmp.mart <- tmp.mart[race.eth != 'Others']
min.mort <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.mart[year %in% (yr - 17):yr, list(deaths.ttl = sum(deaths.ttl)), by = 'race.eth']
# cat(unique(tmp.yr$race.eth))
min.mort <- c(min.mort, min(tmp.yr$deaths.ttl))
}
length(min.mort)
min(min.mort)
tmp.yr
min.mort <- c()
avg.mort <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.mart[year %in% (yr - 17):yr, list(deaths.ttl = sum(deaths.ttl)), by = 'race.eth']
# cat(unique(tmp.yr$race.eth))
min.mort <- c(min.mort, min(tmp.yr$deaths.ttl))
avg.mort <- c(avg.mort, mean(tmp.yr$deaths.ttl))
}
length(min.mort)
min(min.mort)
mean(avg.mort)
#
nat.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'NCHS', 'births',
'national_race_nchs_births.csv')))
#
nat.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'NCHS', 'births',
'national_race_nchs_births.csv')))
nat.data.simp <- nat.data.simp[sex == 'Female']
tmp.nat <- nat.data.simp[sex == 'Female', list( births.ttl = sum( births, na.rm = T)),
by = c('year', 'race.eth')]
tmp.nat <- tmp.nat[race.eth != 'Others']
min.nat <- c()
avg.nat <- c()
for (yr in 2000:2021)
{
tmp.yr <- tmp.nat[year %in% (yr - 17):yr, list(births.ttl = sum(births.ttl)), by = 'race.eth']
min.nat <- c(min.nat, min(tmp.yr$births.ttl))
avg.nat <- c(avg.nat, mean(tmp.yr$births.ttl))
}
min(min.nat)
min(min.nat)
mean(avg.nat)
tmp.yr
642737/148850
# cause by sex, race & eth in 2021----
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
mort.data.simp
tmp.mart <- mort.data.simp[, list( deaths.ttl = sum( deaths, na.rm = T)),
by = c('year', 'race.eth', 'cause.name', 'sex')]
tmp.mart <- tmp.mart[race.eth != 'Others']
min.mort <- tmp.mart[year %in% 2021, list(deaths.ttl = sum(deaths.ttl, na.rm = T)), by = c('race.eth', 'cause.name', 'sex')]
min.mort
min(min.mort$deaths.ttl)
# 621
mean(min.mort$deaths.ttl)
# 7733.38
#
nat.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'NCHS', 'births',
'national_race_nchs_births.csv')))
nat.data.simp <- nat.data.simp[sex == 'Female']
tmp.nat <- nat.data.simp[sex == 'Female', list( births.ttl = sum( births, na.rm = T)),
by = c('year', 'race.eth')]
tmp.yr <- tmp.nat[year %in% 2021, list(births.ttl = sum(births.ttl)), by = 'race.eth']
tmp.yr <- tmp.yr[race.eth != 'Others']
min(tmp.yr$births.ttl)
# 26092
mean(tmp.yr$births.ttl)
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
unique(mort.data.simp$cause.name)
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
unique(mort.data.simp$cause.name)
#
tmp <- mort.data.simp[year %in% 2021 & cause.name != 'Others']
unique(tmp$cause.name)
#
tmp <- mort.data.simp[year %in% 2021 ]
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state')]
mean(tmp$deaths.ttl)
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
unique(mort.data.simp$cause.name)
#
tmp <- mort.data.simp[year %in% 2021 ]
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state')]
mean(tmp$deaths.ttl)
sum(tmp$deaths.ttl)
2357714 /250000
67339/3
tmp <- as.dat.atable(read.csv(prj.dir, 'results', 'hist_state_adj_sex_national_race_fert_stable_poisson_M_summary_cg_loss_age.csv'))
tmp <- as.data.atable(read.csv(prj.dir, 'results', 'hist_state_adj_sex_national_race_fert_stable_poisson_M_summary_cg_loss_age.csv'))
tmp <- as.data.table(read.csv(prj.dir, 'results', 'hist_state_adj_sex_national_race_fert_stable_poisson_M_summary_cg_loss_age.csv'))
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_adj_sex_national_race_fert_stable_poisson_M_summary_cg_loss_age.csv')))
tmp
tmp <- tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp[year == 2021, mean(orphans)]
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp[year == 2021, mean(orphans)]
tmp
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp
sum(tmp$orphans)
tmp[year == 2021, mean(orphans)]
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
tmp
tmp <- tmp[year == 2021 & child.age = 0, list(deaths  = sum(deaths , na.rm = T)), by = c('state', 'year')]
tmp <- tmp[year == 2021 & child.age == 0, list(deaths  = sum(deaths , na.rm = T)), by = c('state', 'year')]
tmp
mean(tmp$deaths)
sum(tmp$deaths)
sum(tmp$deaths)/3
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp
tmp[year == 2021, mean(orphans)]
# check the 1 orphan per 3 deaths statement:
tmp <- mort.data.simp[year %in% 2021 ]
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state')]
mean(tmp$deaths.ttl)
# 67339.47
sum(tmp$deaths.ttl)
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp[year == 2021, mean(orphans)]
# 8109.686
tmp[year == 2021, sum(orphans)]
3434313/3
3434313/413594
67339.47/8109.686
4/0.4
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
# get the data for paper
require(data.table)
source(file.path(prj.dir,"R","postprocessing_fig.R"))
prj.dir <- here::here()
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
unique(mort.data.simp$cause.name)
# tmp <- mort.data.simp[year %in% 2000:2021, list(deaths.ttl = sum(deaths, na.rm = T)), by = 'year']
# min(tmp$deaths.ttl)
# pry.cause <- get_leading_cause_state()
# tmp <- mort.data.simp[cause.name %in% c(pry.cause$raw)]
tmp <- mort.data.simp[year %in% 2021 & cause.name != 'Others']
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state', 'cause.name')]
mean(tmp$deaths.ttl)
# state level (Figure 3)----
mort.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'CDC', 'ICD-10_113_Cause', 'US_state_no_race',
'state_leading-allcauses_1999-2022_adj.csv')))
unique(mort.data.simp$cause.name)
# tmp <- mort.data.simp[year %in% 2000:2021, list(deaths.ttl = sum(deaths, na.rm = T)), by = 'year']
# min(tmp$deaths.ttl)
# pry.cause <- get_leading_cause_state()
# tmp <- mort.data.simp[cause.name %in% c(pry.cause$raw)]
tmp <- mort.data.simp[year %in% 2021 & cause.name != 'Others']
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state', 'cause.name')]
mean(tmp$deaths.ttl)
# check the 1 orphan per 3 deaths statement:
tmp <- mort.data.simp[year %in% 2021 ]
unique(tmp$cause.name)
tmp <- tmp[year %in% 2021, list(deaths.ttl = sum(deaths, na.rm = T)),
by = c('state')]
mean(tmp$deaths.ttl)
# 67339.47
sum(tmp$deaths.ttl)
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp[year == 2021, mean(orphans)]
# 8109.686
tmp[year == 2021, sum(orphans)]
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# check the data: the avg orphans by case and state
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
tmp
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year', 'cause.name')]
tmp[year == 2021, mean(orphans)]
tmp
unique(tmp$cause.name)
tmp <- tmp[cause.name != 'Others']
# natality
nat.data.simp <- as.data.table(read.csv(file.path(prj.dir, 'data', 'birth',
'state_usa_births_cdc_f.csv')))
tmp[year == 2021, mean(orphans)]
tmp
tmp <- as.data.table(read.csv(file.path(prj.dir, 'results', 'hist_state_poisson_M_summary_cg_loss_age.csv')))
# tmp[, orphans := double_orphans + mother + father]
tmp <- tmp[year == 2021, list(orphans = sum(orphans, na.rm = T)), by = c('state', 'year')]
tmp[year == 2021, mean(orphans)]
# 8109.686
tmp[year == 2021, sum(orphans)]
# 413594
tmp
900*8
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
# get the data for paper
require(data.table)
source(file.path(prj.dir,"R","postprocessing_fig.R"))
prj.dir <- here::here()
# get the data for paper
require(data.table)
prj.dir <- here::here()
# national level (Figrue 1) ----
# mortality
mort.data.simp <- as.data.table(readRDS(file.path(prj.dir, 'data', 'data_paper', 'mortality',
'rep_id-1',  'rankable_cause_deaths_1983-2021.RDS')))
unique(mort.data.simp$cause.name)
unique(mort.data.simp$age)
tmp <- mort.data.simp[year %in% 2000:2021, list(deaths.ttl = sum(deaths, na.rm = T)), by = 'year']
min(tmp$deaths.ttl)
# Preamble ----
# race & ethnicity
# This script aims to process the grandparents caregiver loss stratified by the types of the provided cares
# adjust the last two types to de-double-counting the loss
# reuse the results from 0523 version
#
# 2024.07.22 - 2024.07.29
# Yu Chen
require(data.table)
require(ggplot2)
require(tidyverse)
# User defined args -----
tmp <- Sys.info()
if (grepl("hpc.ic.ac.uk",tmp["nodename"])) # outdir yu
{
option_list <- list(
optparse::make_option(c("-v", "--verbose"), action = "store_true", default = FALSE,
help = "Print extra output [default]"),
optparse::make_option("--pkg_dir", type = "character", default = NA_character_,
help = "Absolute file path to package directory, used as long we don t build an R package [default]",
dest = "prj.dir"),
optparse::make_option("--v_name", type = "character", default = 'v0811',
help = "The version of this pipeline [default]",
dest = "v.name"),
optparse::make_option("--sel_leading_nb", type = "character", default = 'all',
help = "The number of leading causes [default]",
dest = "sel.nb"),
optparse::make_option("--sample_type", type = "character", default = 'poisson_sampling',
help = "Method to sample mortality data [default]",
dest = "sample.type"),
optparse::make_option("--rep_nb", type = "integer", default = 1e4,
help = "The number to do the sampling [default]",
dest = "rep.nb")
)
args <- optparse::parse_args(optparse::OptionParser(option_list = option_list))
}else{
args <- list()
# testing
rep.nb <- 9
args$prj.dir <- here::here()
args$rep.nb <- copy(rep.nb)
args$sel.nb <- 'all'
args$sample.type <- 'poisson_sampling_rnk'
args$v.name <- 'V0523'
}
# based on previous results in V0523, we only disaggregate the grandparents loss into three types
args$sample.type <- 'poisson_sampling_rnk'
args$v.name <- 'V0523'
rep.nb <- args$rep.nb
set.seed(rep.nb)
args$out.dir <- file.path(args$prj.dir, 'results')
args$in.dir <- file.path(args$prj.dir, 'data')
# Load the sampled data dir ----
args$birth.data <- file.path(args$in.dir, args$sample.type, paste0('rep_id-', args$rep.nb))
args$mort.data <- file.path(args$in.dir, args$sample.type, paste0('rep_id-', args$rep.nb))
args$pop.data <- file.path(args$in.dir, args$sample.type, paste0('rep_id-', args$rep.nb))
mort.dir <- file.path(args$mort.data, 'rankable_cause_deaths_1983-2021.RDS')
pop.dir <- file.path(args$pop.data, 'national_race_nchs-cdc_population_5yr_all.rds')
birth.dir <- file.path(args$birth.data, 'national_race_nchs_births.rds')
pop.harzard.dir <- file.path(args$pop.data, 'national_race_nchs-cdc_population_5yr_old_all.rds')
d.grandp.path <- file.path(args$in.dir, 'grandparents', paste0('rep_grandp-', rep.nb))
v.name <- paste0(args$v.name, '-', basename(args$mort.data))
args$rep <- 0
str(args)
# estimate the orphanhood by national level
if (!dir.exists(args$out.dir))
{
dir.create(args$out.dir)
}
if (!dir.exists(file.path(args$prj.dir, 'figures')))
{
dir.create(file.path(args$prj.dir, 'figures'))
}
if (!dir.exists(file.path(args$prj.dir, 'results')))
{
dir.create(file.path(args$prj.dir, 'results'))
}
if (!dir.exists(file.path(args$prj.dir, 'results', 'figs')))
{
dir.create(file.path(args$prj.dir, 'results', 'figs'))
}
# use another out.dir folder
type.input <- 'national_race_fert_stable'
folder.name <- 'mort_nchs_fert_cdc_stable'
# create the folder for nb of children outputs
if (!dir.exists(file.path(args$in.dir, 'data')))
{
dir.create(file.path(args$in.dir, 'data'))
}
if (!dir.exists(file.path(args$in.dir, 'data', folder.name)))
{
dir.create(file.path(args$in.dir, 'data', folder.name))
}
if (!dir.exists(file.path(args$prj.dir, 'figures', folder.name)))
{
dir.create(file.path(args$prj.dir, 'figures', folder.name))
}
if (!dir.exists(file.path(args$prj.dir, 'results', paste0(type.input, '_', v.name))))
{
dir.create(file.path(args$prj.dir, 'results', paste0(type.input, '_', v.name)))
}
if (!dir.exists(file.path(args$prj.dir, 'results', paste0('orphans_', v.name))))
{
dir.create(file.path(args$prj.dir, 'results', paste0('orphans_', v.name)))
}
# Load the functions ----
if (0)
{
source(file.path(args$prj.dir,"R","process_fertility.R"))
source(file.path(args$prj.dir,"R","process_children_function.R"))
source(file.path(args$prj.dir,"R","process_child_mortality.R"))
source(file.path(args$prj.dir,"R","process_number_children.R"))
source(file.path(args$prj.dir,"R","grandp_cg_age_function.R"))
source(file.path(args$prj.dir,"R","process_skip_generation.R"))
source(file.path(args$prj.dir,"R","calculate_orphans.R"))
# updates using NCHS data
source(file.path(args$prj.dir,"R","extract_leading_causes_deaths_state_cdc.R"))
# source(file.path(args$prj.dir,"R","nchs_fertility_children.R"))
source(file.path(args$prj.dir,"R","grandp_household_total.R"))
source(file.path(args$prj.dir,"R","calculate_caregiver_loss.R"))
# saving results
source(file.path(args$prj.dir,"R","saving_estimates.R"))
source(file.path(args$prj.dir,"R","postprocessing_fig.R"))
# add resampling data
source(file.path(args$prj.dir,"R","poisson_nchs_fertility_children.R"))
}
# new: only use the following functions
source(file.path(args$prj.dir,"R","fertility_rate_rnk_poisson_noise.R"))
source(file.path(args$prj.dir,"R","children_estimation_rnk_poisson_noise.R"))
source(file.path(args$prj.dir,"R","grandp_household_total.R"))
source(file.path(args$prj.dir,"R","calculate_grandp_caregiver_loss_sep_type.R"))
source(file.path(args$prj.dir,"R","double_orphans_estimation_rnk_poisson_noise.R"))
source(file.path(args$prj.dir,"R","postprocessing_fig.R"))
# Main model ----
for (test.yr.input in 2000:2021)
{
args$yr.input <- test.yr.input
cat('Now we are processing for year', args$yr.input, '...\n')
cat(sprintf("Processing caregivers loss from the grandparents ...\n"))
# grandp_household_total.R
# 240722 separate all grandparents loss into three categories
{
set.seed(rep.nb)
#
# process_usa_state_national_skip_generation_age_all_year_ACS_resample(args$in.dir, d.grandp.path, rep.nb, args$yr.input, type.input)
process_usa_state_national_grandp_all_age_year_ACS_resample_subcat(args$in.dir, d.grandp.path, rep.nb, args$yr.input, type.input)
# write.csv(gp, file.path(resample.dir, paste0(type.input, '_grandp_all_types_', cur.yr, '.csv')), row.names = F)
#
}
}
